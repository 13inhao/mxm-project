## homotopy.jl --- 

###_____________________________________________________________________________
##
##  Load Packages
###_____________________________________________________________________________

import Pkg
Pkg.add("HomotopyContinuation")
Pkg.add("DelimitedFiles")
using HomotopyContinuation, LinearAlgebra, DelimitedFiles


# This script was tested with Julia v1.5.3.

###_____________________________________________________________________________
## 
##  Define variables and some constraints
###_____________________________________________________________________________

@var  θ[1:5] 
@var f₋₋₋₋ f₋₋₋₊ f₋₋₊₋ f₋₋₊₊ f₋₊₋₋ f₋₊₋₊ f₋₊₊₋ f₋₊₊₊ f₊₋₋₋ f₊₋₋₊ f₊₋₊₋ f₊₋₊₊ f₊₊₋₋ f₊₊₋₊ f₊₊₊₋ f₊₊₊₊  θ₁ θ₂ θ₃ θ₄ θ₅ 

f₋₋₋₋ = (1/16) * (1 + θ₁*θ₅*θ₂ + θ₁*θ₃ + θ₁*θ₅*θ₄ + θ₂*θ₅*θ₃ + θ₂*θ₄ + θ₃*θ₅*θ₄ + θ₁*θ₃*θ₂*θ₄)
f₋₋₋₊ = (1/16) * (1 + θ₁*θ₅*θ₂ + θ₁*θ₃ - θ₁*θ₅*θ₄ + θ₂*θ₅*θ₃ - θ₂*θ₄ - θ₃*θ₅*θ₄ - θ₁*θ₃*θ₂*θ₄)
f₋₋₊₋ = (1/16) * (1 + θ₁*θ₅*θ₂ - θ₁*θ₃ + θ₁*θ₅*θ₄ - θ₂*θ₅*θ₃ + θ₂*θ₄ - θ₃*θ₅*θ₄ - θ₁*θ₃*θ₂*θ₄)
f₋₋₊₊ = (1/16) * (1 + θ₁*θ₅*θ₂ - θ₁*θ₃ - θ₁*θ₅*θ₄ - θ₂*θ₅*θ₃ - θ₂*θ₄ + θ₃*θ₅*θ₄ + θ₁*θ₃*θ₂*θ₄)
f₋₊₋₋ = (1/16) * (1 - θ₁*θ₅*θ₂ + θ₁*θ₃ + θ₁*θ₅*θ₄ - θ₂*θ₅*θ₃ - θ₂*θ₄ + θ₃*θ₅*θ₄ - θ₁*θ₃*θ₂*θ₄)
f₋₊₋₊ = (1/16) * (1 - θ₁*θ₅*θ₂ + θ₁*θ₃ - θ₁*θ₅*θ₄ - θ₂*θ₅*θ₃ + θ₂*θ₄ - θ₃*θ₅*θ₄ + θ₁*θ₃*θ₂*θ₄)
f₋₊₊₋ = (1/16) * (1 - θ₁*θ₅*θ₂ - θ₁*θ₃ + θ₁*θ₅*θ₄ + θ₂*θ₅*θ₃ - θ₂*θ₄ - θ₃*θ₅*θ₄ + θ₁*θ₃*θ₂*θ₄)
f₋₊₊₊ = (1/16) * (1 - θ₁*θ₅*θ₂ - θ₁*θ₃ - θ₁*θ₅*θ₄ + θ₂*θ₅*θ₃ + θ₂*θ₄ + θ₃*θ₅*θ₄ - θ₁*θ₃*θ₂*θ₄)
f₊₋₋₋ = (1/16) * (1 - θ₁*θ₅*θ₂ - θ₁*θ₃ - θ₁*θ₅*θ₄ + θ₂*θ₅*θ₃ + θ₂*θ₄ + θ₃*θ₅*θ₄ - θ₁*θ₃*θ₂*θ₄)
f₊₋₋₊ = (1/16) * (1 - θ₁*θ₅*θ₂ - θ₁*θ₃ + θ₁*θ₅*θ₄ + θ₂*θ₅*θ₃ - θ₂*θ₄ - θ₃*θ₅*θ₄ + θ₁*θ₃*θ₂*θ₄)
f₊₋₊₋ = (1/16) * (1 - θ₁*θ₅*θ₂ + θ₁*θ₃ - θ₁*θ₅*θ₄ - θ₂*θ₅*θ₃ + θ₂*θ₄ - θ₃*θ₅*θ₄ + θ₁*θ₃*θ₂*θ₄)
f₊₋₊₊ = (1/16) * (1 - θ₁*θ₅*θ₂ + θ₁*θ₃ + θ₁*θ₅*θ₄ - θ₂*θ₅*θ₃ - θ₂*θ₄ + θ₃*θ₅*θ₄ - θ₁*θ₃*θ₂*θ₄)
f₊₊₋₋ = (1/16) * (1 + θ₁*θ₅*θ₂ - θ₁*θ₃ - θ₁*θ₅*θ₄ - θ₂*θ₅*θ₃ - θ₂*θ₄ + θ₃*θ₅*θ₄ + θ₁*θ₃*θ₂*θ₄)
f₊₊₋₊ = (1/16) * (1 + θ₁*θ₅*θ₂ - θ₁*θ₃ + θ₁*θ₅*θ₄ - θ₂*θ₅*θ₃ + θ₂*θ₄ - θ₃*θ₅*θ₄ - θ₁*θ₃*θ₂*θ₄)
f₊₊₊₋ = (1/16) * (1 + θ₁*θ₅*θ₂ + θ₁*θ₃ - θ₁*θ₅*θ₄ + θ₂*θ₅*θ₃ - θ₂*θ₄ - θ₃*θ₅*θ₄ - θ₁*θ₃*θ₂*θ₄)
f₊₊₊₊ = (1/16) * (1 + θ₁*θ₅*θ₂ + θ₁*θ₃ + θ₁*θ₅*θ₄ + θ₂*θ₅*θ₃ + θ₂*θ₄ + θ₃*θ₅*θ₄ + θ₁*θ₃*θ₂*θ₄)

h=[f₋₋₋₋, f₋₋₋₊, f₋₋₊₋, f₋₋₊₊, f₋₊₋₋, f₋₊₋₊, f₋₊₊₋, f₋₊₊₊, f₊₋₋₋, f₊₋₋₊, f₊₋₊₋,f₊₋₊₊, f₊₊₋₋, f₊₊₋₊, f₊₊₊₋, f₊₊₊₊]
@var f[1:16]
f[1]
f[2]

## Constraints
S = sum(f)-1
T = θ₁*θ₅*θ₂ - 1/2
Z = [θ₃; θ₄]
H = f-h


###_____________________________________________________________________________
##
## Define the critical equations + constraints
###_____________________________________________________________________________

@var n[1:16]
@var logL Lagrangian λ[1:20]
logL = sum(n.*log.(f))

Lagrangian = logL + λ'*[S;T;Z;H]

dL=differentiate(Lagrangian, f)


F = Diagonal(f)

correcteddL = F*dL
# system of equations

C = System([correcteddL; S; T; H; Z], variables = [f; θ; λ], parameters = n)
n₀ = rand(Float64, 16)

res = solve(C; target_parameters = n₀) 

